function d({columns:u,isLive:a}){return{error:void 0,isLoading:!1,columns:u,isLive:a,init(){if(!this.columns||this.columns.length===0){this.columns=[];return}},get hasToggleable(){return!this.columns||this.columns.length===0?!1:this.columns.some(t=>t.type==="group"?t.columns?.some(e=>e.toggleable!==!1):t.toggleable!==!1)},get groupedColumns(){let t={};return this.columns.filter(e=>e.type==="group").forEach(e=>{t[e.name]=this.calculateGroupedColumns(e)}),t},calculateGroupedColumns(t){if(!t?.columns)return{checked:!1,disabled:!0,indeterminate:!1};let e=t.columns.filter(r=>r.toggleable!==!1);if(e.length===0)return{checked:!0,disabled:!0,indeterminate:!1};let n=e.filter(r=>r.toggled).length,s=t.columns.filter(r=>r.toggleable===!1);return n===0&&s.length>0?{checked:!0,disabled:!1,indeterminate:!0}:n===0?{checked:!1,disabled:!1,indeterminate:!1}:n===e.length?{checked:!0,disabled:!1,indeterminate:!1}:{checked:!0,disabled:!1,indeterminate:!0}},getColumn(t,e=null){return e?this.columns.find(s=>s.type==="group"&&s.name===e)?.columns?.find(s=>s.name===t):this.columns.find(n=>n.name===t)},toggleGroup(t){let e=this.columns.find(l=>l.type==="group"&&l.name===t);if(!e?.columns)return;let n=this.calculateGroupedColumns(e);if(n.disabled)return;let r=e.columns.filter(l=>l.toggleable!==!1).some(l=>l.toggled),o=n.indeterminate?!0:!r;e.columns.filter(l=>l.toggleable!==!1).forEach(l=>{l.toggled=o}),this.columns=[...this.columns],this.isLive&&this.applyColumnManager()},toggleColumn(t,e=null){let n=this.getColumn(t,e);!n||n.toggleable===!1||(n.toggled=!n.toggled,this.columns=[...this.columns],this.isLive&&this.applyColumnManager())},reorderColumns(t){let e=t.map(n=>n.split("::"));this.reorderTopLevel(e),this.isLive&&this.applyColumnManager()},reorderGroupColumns(t,e){let n=this.columns.find(o=>o.type==="group"&&o.name===e);if(!n)return;let s=t.map(o=>o.split("::")),r=[];s.forEach(([o,l])=>{let i=n.columns.find(c=>c.name===l);i&&r.push(i)}),n.columns=r,this.columns=[...this.columns],this.isLive&&this.applyColumnManager()},reorderTopLevel(t){let e=this.columns,n=[];t.forEach(([s,r])=>{let o=e.find(l=>s==="group"?l.type==="group"&&l.name===r:s==="column"?l.type!=="group"&&l.name===r:!1);o&&n.push(o)}),this.columns=n},async applyColumnManager(){this.isLoading=!0;try{await this.$wire.commit(),this.error=void 0}catch(t){this.error="Failed to update column visibility",console.error("Table toggle columns error:",t)}finally{this.isLoading=!1}}}}export{d as default};
