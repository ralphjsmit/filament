#!/usr/bin/env php
<?php

use Illuminate\Filesystem\Filesystem;
use Illuminate\Support\Facades\App;
use Illuminate\Support\ServiceProvider;
use Illuminate\Support\Str;
use function Termwind\{ask, render};

require 'vendor/autoload.php';

render(<<<'HTML'
    <div>
        <div class="space-y-1">
            <div class="py-1 px-3 bg-amber-600 text-amber-50">
                <strong>Filament v4</strong> Upgrade
            </div>

            <div>
                Welcome to the <strong>Filament v4</strong> upgrade process!

                <br />

                This script will attempt to handle most of the breaking changes for you.

                <br />

                If you have any questions, please reach out to us on <a href="https://filamentphp.com/discord" class="underline font-bold">Discord</a> or <a href="https://github.com/filamentphp/filament/discussions/new?category=q-a" class="underline font-bold">GitHub</a>.
            </div>

            <div>
                To begin, please ensure that you are using a version control system such as Git.

                <br />

                We will make changes directly to your files, and you will need to be able to revert them if something goes wrong.

                <br />

                <strong>Please commit any changes you have made to your project before continuing.</strong>
            </div>
        </div>

        <br />
    </div>
HTML);

$isReady = strtolower(trim(ask(<<<HTML
    <span class="bg-amber-600 text-amber-50 mr-1">
        Are you ready to continue? y/n
    </span>
HTML) ?? 'y')) === 'y';

if (! $isReady) {
    render(<<<HTML
        <p class="bg-rose-600 text-rose-50">
            Aborting upgrade process.
        </p>
    HTML);

    return;
}

$configFilePath = __DIR__ . DIRECTORY_SEPARATOR . 'config' . DIRECTORY_SEPARATOR . 'filament.php';

if (
    (! file_exists($configFilePath)) ||
    (! str_contains(file_get_contents($configFilePath), 'FILAMENT_FILESYSTEM_DISK'))
) {
    ask(<<<HTML
        <span class="mr-1 mt-1">
            The <strong>FILAMENT_FILESYSTEM_DISK</strong> has been removed, and the default configuration file now
            references the <strong>FILESYSTEM_DISK</strong> environment variable. Please read the
            <a href="https://filamentphp.com/docs/v4/upgrade-guide" class="underline font-bold">documentation</a>
            for more information, and press any key to continue.
        </span>
    HTML);
}

$filesystem = new Filesystem();

$appDirectory = $argv[1] ?? 'app';

$backwardsCompatibilityProviderPath = getcwd() . "/{$appDirectory}/Providers/Filament/Filament4BackwardsCompatibilityProvider.php";

if ((! $filesystem->exists($backwardsCompatibilityProviderPath)) && strtolower(trim(ask(<<<HTML
    <div class="mr-1 mt-1">
        <div>Filament 4 changes the default behaviour of some components. For example:</div>
        <ul>
            <li>Fieldsets, grids, and sections in schemas no longer span the full width of their parent layout by default</li>
            <li>Inline radio form fields no longer have an inline label by default, this is a separate setting</li>
            <li>Tables no longer have an "all" pagination option</li>
        </ul>
        <div>Would you like to publish a new service provider in your app to restore the old behaviours?</div>
        <div>If you choose not to, you will need to manually update your code to preserve the old behaviours.</div>
        <div>Once the service provider is published, you can edit it or move the code inside to a more appropriate place for your app.</div>
        <div class="mr-1">Would you like to maintain behavioral backwards compatibility? y/n</div>
    </div>
HTML) ?? 'y')) === 'y') {
    $hasBootstrapProvidersFile = file_exists($bootstrapProvidersPath = getcwd() . '/bootstrap/providers.php');
    $backwardsCompatibilityProviderFqn = 'App\\Providers\\Filament\\Filament4BackwardsCompatibilityProvider';

    $filesystem->ensureDirectoryExists(
        pathinfo($backwardsCompatibilityProviderPath, PATHINFO_DIRNAME),
    );

    $filesystem->put($backwardsCompatibilityProviderPath, file_get_contents(__DIR__ . '/../stubs/BackwardsCompatibilityProvider.stub'));

    if ($hasBootstrapProvidersFile) {
        ServiceProvider::addProviderToBootstrapFile(
            $backwardsCompatibilityProviderFqn,
            $bootstrapProvidersPath,
        );
    } else {
        $appConfig = file_get_contents(getcwd() . '/config/app.php');

        if (! Str::contains($appConfig, "{$backwardsCompatibilityProviderFqn}::class")) {
            file_put_contents(getcwd() . '/config/app.php', str_replace(
                'App\\Providers\\RouteServiceProvider::class,',
                "{$backwardsCompatibilityProviderFqn}::class," . PHP_EOL . '        App\\Providers\\RouteServiceProvider::class,',
                $appConfig,
            ));
        }
    }

    if ($hasBootstrapProvidersFile) {
        render(<<<HTML
            <div class="mt-1">
                We've attempted to register the Filament4BackwardsCompatibilityProvider in your [bootstrap/providers.php] file. If you get an error while trying to access your panel then this process has probably failed. You can manually register the service provider by adding it to the array.
            </div>
        HTML);
    } else {
        render(<<<HTML
            <div class="mt-1">
                We've attempted to register the Filament4BackwardsCompatibilityProvider in your [config/app.php] file as a service provider. If you get an error while trying to access your panel then this process has probably failed. You can manually register the service provider by adding it to the [providers] array.
            </div>
        HTML);
    }
}

render(<<<HTML
    <p class="bg-green-600 text-green-50">
        Starting upgrade...
    </p>
HTML);

render(<<<HTML
    <p>
        Start processing <strong>/{$appDirectory}</strong> to fix code affected by breaking changes.
    </p>
HTML);

$rectorScriptPath = implode(DIRECTORY_SEPARATOR, ['vendor', 'bin', 'rector']);

exec("{$rectorScriptPath} process {$appDirectory} --config vendor/filament/upgrade/src/rector.php --clear-cache");

render(<<<HTML
    <p class="pt-2">
        Finished processing <strong>/{$appDirectory}</strong>.
    </p>
HTML);

$requireCommands = [];

foreach (json_decode(file_get_contents('composer.json'), true)['require'] as $package => $version) {
    if ($package === 'filament/upgrade') {
        continue;
    }

    if (! str_starts_with($package, 'filament/')) {
        continue;
    }

    $requireCommands[] = "composer require {$package}:\"^4.0\" -W --no-update";
}

$requireCommands = implode("</strong><br /><strong>", $requireCommands);

render(<<<HTML
    <div>
        <span class="bg-green-600 text-green-50">
            Now you're ready to update your Composer dependencies!
        </span>

        <br /> <br />

        First require new versions of Filament packages:

        <br />

        <strong>{$requireCommands}</strong>

        <br /> <br />

        If you have any third party plugins that need to be upgraded, you should bump those dependencies as well.

        <br /> <br />

        And then run:

        <br />

        <strong>composer update</strong>

        <br /> <br />

        If you have any questions, please reach out to us on <a href="https://filamentphp.com/discord" class="underline font-bold">Discord</a> or <a href="https://github.com/filamentphp/filament/discussions/new?category=q-a" class="underline font-bold">GitHub</a>.
    </div>
HTML);
